<project default="build">
	<property name="release" value="0.9.14"/>
	<property name="release-overwrite" value="false"/>

	<property environment="env"/>
	<import file="${env.BROWNIES_DEV}/build-lib.xml" />

    <property name="Brownies-Release.prj" value="Brownies-Collections" />

    <target name="do-build-release" depends="build" />

	<!--
	TODO
	EvalJavaParser.BuildSource
    <target name="pre-build" depends="build-src">
	</target>
	-->

	<target name="post-build">
		<!-- There are no dependencies, so remove these JARs -->
		<delete file="${build.dir}/brownies-collections-only-deps.jar" />
		<delete file="${build.dir}/brownies-collections-with-all.jar" />
		<delete file="${build.dir}/brownies-collections-with-deps.jar" />
	</target>

	<!-- ==================== UNUSED ==================== -->
	<!--
	Example targets how to remove files from build

	<target name="build-doc">
       	<antcall target="build-doc-0.9.x" />
	</target>

	-->
	<target name="post-build-0.9.x">
	    <property name="tmp.bin.jar" value="${build.dir}/brownies-collections.jar" />
        <property name="tmp.bin.dir" value="${build.dir}/brownies-collections.jar.tmp" />
		<property name="skipFiles-0.9.x" value="**/Big*" />

		<unjar src="${tmp.bin.jar}" dest="${tmp.bin.dir}" />
		<delete>
			 <fileset dir="${tmp.bin.dir}" includes="${skipFiles-0.9.x}"/>
		</delete>
		<delete file="${tmp.bin.jar}" />
		<jar file="${tmp.bin.jar}" basedir="${tmp.bin.dir}" />
        <delete dir="${tmp.bin.dir}" />

        <property name="tmp.src.jar" value="${build.dir}/brownies-collections-sources.jar" />
        <property name="tmp.src.dir" value="${build.dir}/brownies-collections-sources.jar.tmp" />
        <unjar src="${tmp.src.jar}" dest="${tmp.src.dir}" />
        <delete>
             <fileset dir="${tmp.src.dir}" includes="${skipFiles-0.9.x}"/>
        </delete>
        <delete file="${tmp.src.jar}" />
        <jar file="${tmp.src.jar}" basedir="${tmp.src.dir}" />
        <delete dir="${tmp.src.dir}" />
	</target>

    <target name="build-doc-0.9.x" depends="prepare-doc">
        <delete dir="build/doc-src" />
	    <mkdir dir="build/doc-src" />
	   	<copy todir="build/doc-src">
	   	   <fileset dir="src" excludes="${skipFiles-0.9.x}" />
	   	</copy>
        <delete dir="${build.dir}/doc" />
            <javadoc
            	executable="${javadoc.executable}"
                access="public"
                author="true"
                destdir="${build.dir}/doc"
                doctitle="${lib.title}"
                nodeprecated="false"
                nodeprecatedlist="false"
                noindex="false"
                nonavbar="false"
                notree="false"
                packagenames="${lib.package}.*"
                source="1.6"
            	sourcepath="build/doc-src:${rt.src.dir}"
                splitindex="true"
                use="true"
                version="true">
                <classpath refid="lib.classpath" />
            </javadoc>
            <jar destfile="${build.dir}/${lib.name}-javadoc.jar">
                <fileset dir="${build.dir}/doc" />
            </jar>

    	<!--
	    <copy file="build/brownies-collections-javadoc.jar" tofile="D:\Java\Sources\Origo-Magicwerk\Brownies-Dev\build\snapshot\brownies-collections-20120724-javadoc.jar" />
	   	<copy file="build/brownies-collections-javadoc.jar" tofile="D:\Java\Sources\Origo-Magicwerk\Brownies-Dev\build\release\brownies-collections-0.9.1-javadoc.jar" />

	    <delete dir="D:\Java\Build\Origo-Magicwerk\Brownies-Collections\build\doc" />
        <copydir src="build/doc" dest="D:\Java\Build\Origo-Magicwerk\Brownies-Collections\build\doc" />
		-->
	</target>

	<!-- TEST -->

	<property name="release.url" value="svn://localhost/magicwerk.origo/trunk/Java/Brownies" />
	<property name="release.dir" value="C:/dev/Java/Releases" />

	<!-- Install -->

	<target name="mvn-install">
		<property name="lib.dir" value="${project.basedir}/../Brownies-Jar/lib" />

		<exec executable="cmd">
			<arg line="/c mvn install:install-file -DgroupId=com.melloware -DartifactId=jintellitype -Dversion=1.3.9-dll-x64 -Dpackaging=jar -Dfile=${lib.dir}/jintellitype-1.3.9-dll-x64.jar -DgeneratePom=true"/>
		</exec>
	</target>

	<!-- JMH -->

	<target name="create-jmh">
		<delete dir="tmp" />
		<mkdir dir="tmp" />
		<exec dir="tmp" executable="cmd.exe">
		  <arg line="/c  mvn archetype:generate
	          -DinteractiveMode=false
	          -DarchetypeGroupId=org.openjdk.jmh
	          -DarchetypeArtifactId=jmh-java-benchmark-archetype
	          -DgroupId=org.magicwerk.brownies.collections.jmh
	          -DartifactId=jmh
	          -Dversion=1.0"/>
		</exec>
		<move todir="jmh">
			<fileset dir="tmp/jmh"/>
		</move>
	</target>

	<target name="run-jmh">
		<exec dir="jmh" executable="cmd.exe">
			<arg line="/c mvn clean install"/>
		</exec>
		<!-- Execute all tests matching regex 'List$' with 5 iterations after 5 warm-up iterations, using 1 fork -->
		<exec dir="jmh" executable="cmd.exe">
			<!--
			<arg line='/c java -jar target\benchmarks.jar -wi 5 -i 5 -f 1 List$'/>
			-->
			<arg line='/c java -jar target\benchmarks.jar -wi 5 -i 5 -f 1 test'/>
		</exec>
		<!-- Show help -->
		<!--
		<exec dir="jmh" executable="cmd.exe">
			<arg line="/c java -jar target\benchmarks.jar -h"/>
		</exec>
		-->
	</target>

	<!-- Dependencies -->

	<target name="init-libs" depends="copy-dependencies-jmh, copy-dependencies-fastutil, copy-dependencies-jintellitype"/>
		
	<target name="copy-dependencies-jintellitype">
		<!--
		File jintellitype-1.3.9-dll-x64.jar contains all files of jintellitype-1.3.9.jar
		but also JIntellitype64.dll which can be retrieved from 
		File has been downloaded from https://github.com/melloware/jintellitype
		src/main/resources/com/melloware/jintellitype/windows/JIntellitype64.dll.
		Currently the versions with DLL are not available through Maven.
		-->
		<copy file="${Brownies-Jar.dir}\lib\jintellitype-1.3.9-dll-x64.jar" tofile="lib/jintellitype-1.3.9-dll-x64.jar" />
	</target>

	<target name="copy-dependencies-jmh">
		<antcall target="copy-dependencies">
	    	<param name="groupId" value="org.openjdk.jmh"/>
	    	<param name="artifactId" value="jmh-core"/>
			<param name="version" value="1.12"/>
	    	<param name="depsDir" value="lib/jmh"/>
		</antcall>
	</target>

	<target name="copy-dependencies-fastutil">
		<antcall target="copy-dependencies">
	    	<param name="groupId" value="it.unimi.dsi"/>
	    	<param name="artifactId" value="fastutil"/>
			<param name="version" value="7.0.9"/>
	    	<param name="depsDir" value="lib/fastutil"/>
		</antcall>
	</target>
	
	<!-- Build -->

	<target name="pre-build" depends="retrieve">
	</target>

	<path id="lib.jars">
	    <fileset dir="lib">
	        <include name="*.jar"/>
	    </fileset>
	    <fileset dir="../Brownies-Jar/lib">
	        <include name="*.jar"/>
	    </fileset>
	</path>

	<target name="use-rev-HEAD">
		<antcall target="use-rev">
	    	<param name="rev" value="HEAD"/>
		</antcall>
	</target>

	<target name="use-rev-0.9.4">
		<antcall target="use-rev">
	    	<param name="rev" value="1977"/>
		</antcall>
	</target>

	<target name="use-rev-0.9.3">
		<antcall target="use-rev">
	    	<param name="rev" value="1557"/>
		</antcall>
	</target>

	<target name="use-rev">
		<exec dir="../Brownies-Collections" executable="cmd.exe">
		  <arg line="/c svn update -r ${rev}"/>
		</exec>
		<antcall target="get-svn-revision" />
	</target>


	<target name="checkout-releases" depends="
		checkout-release-0.9.0,
		checkout-release-0.9.1,
		checkout-release-0.9.2,
		checkout-release-0.9.3,
		checkout-release-0.9.4,
		checkout-release-0.9.5,
		checkout-release-0.9.6,
		checkout-release-0.9.7,
		checkout-release-0.9.8,
		checkout-release-0.9.9,
		checkout-release-0.9.10,
		checkout-release-0.9.11,
		checkout-release-0.9.12,
		checkout-release-0.9.13,
		checkout-release-0.9.14"/>

	<target name="checkout-release-0.9.0">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.0" />
	    	<param name="rev" value="983" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.1">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.1" />
	    	<param name="rev" value="1174" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.2">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.2" />
	    	<param name="rev" value="1183" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.3">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.3" />
	    	<param name="rev" value="1557" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.4">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.4" />
	    	<param name="rev" value="1977" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.5">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.5" />
	    	<param name="rev" value="2127" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.6">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.6" />
	    	<param name="rev" value="2212" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.7">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.7" />
	    	<param name="rev" value="2409" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.8">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.8" />
	    	<param name="rev" value="2550" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.9">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.9" />
	    	<param name="rev" value="2745" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.10">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.10" />
	    	<param name="rev" value="2831" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.11">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.11" />
	    	<param name="rev" value="2944" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.12">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.12" />
	    	<param name="rev" value="2976" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.13">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.13" />
	    	<param name="rev" value="3152" />
		</antcall>
	</target>

	<target name="checkout-release-0.9.14">
		<antcall target="checkout-release">
	    	<param name="release" value="0.9.14" />
	    	<param name="rev" value="4530" />
		</antcall>
	</target>

	<target name="checkout-release">
		<property name="dir" value="${release.dir}/Brownies-Collections/Brownies-Collections-${release}" />
		<mkdir dir="${dir}" />

		<exec dir="${dir}" executable="cmd.exe">
			<arg line="/c svn checkout ${release.url}/Brownies-Collections@${rev}"/>
		</exec>
		<antcall target="show-svn-revision">
	    	<param name="dir" value="${dir}/Brownies-Collections" />
		</antcall>
		<replaceregexp file="${dir}/Brownies-Collections/.project" flags="s"
		               match="&lt;name&gt;Brownies-Collections&lt;/name&gt;"
		               replace="&lt;name&gt;Brownies-Collections-${release}&lt;/name&gt;" />

		<exec dir="${dir}" executable="cmd.exe">
			<arg line="/c svn checkout ${release.url}/Brownies-Collections-Test@${rev}"/>
		</exec>
		<antcall target="show-svn-revision">
	    	<param name="dir" value="${dir}/Brownies-Collections-Test" />
		</antcall>
		<replaceregexp file="${dir}/Brownies-Collections-Test/.project" flags="s"
		               match="&lt;name&gt;Brownies-Collections-Test&lt;/name&gt;"
		               replace="&lt;name&gt;Brownies-Collections-Test-${release}&lt;/name&gt;" />
		<replaceregexp file="${dir}/Brownies-Collections-Test/.classpath" flags="s"
		               match='path="/Brownies-Collections"'
		               replace='path="/Brownies-Collections-${release}"' />

	</target>

	<!--
	Run tests with enabled debug checks.
	- create a copy of the source in build/src
	- set DEBUG_CHECK in GapList.java to true
	- compile code
	- run dummy check to see that DEBUG_CHECK is active
	- execute RunAllTest with debug checks activated
	-->
	<target name="run-debug-test">
		<delete dir="build/src" />

		<!--
		Create copy of source in new directory, modify source so that debug checks are enabled
		and compile the files.
		-->
		<mkdir dir="build/src" />
		<copy todir="build/src">
    		<fileset dir="../Brownies-Collections/src" />
		</copy>
		<replaceregexp file="build/src/org/magicwerk/brownies/collections/GapList.java" flags=""
		               match="DEBUG_CHECK = false"
		               replace="DEBUG_CHECK = true" />

		<mkdir dir="build/bin" />
		<javac srcdir="build/src" destdir="build/bin" includeantruntime="false" />

		<!--
		Run dummy test to check whether DEBUG_CHECK is active.
		This test will fail, but as this is expected, test will continue normally.
		 -->
        <java classname="org.junit.runner.JUnitCore" jvm="${java.exe}" fork="yes" resultproperty="java-result-1">
        	<jvmarg line="-ea" />
       		<arg line="org.magicwerk.brownies.collections.RunDebugTest2" />
            <classpath>
	            <pathelement location="bin" />
	            <pathelement location="build/bin" />
	            <pathelement location="../Brownies-Core/bin" />
	            <pathelement location="../Brownies-Values/bin" />
	            <pathelement location="../Brownies-Test/bin" />
	            <pathelement location="../MagicTest-NG/build/magictest-ng.jar" />
	            <path refid="lib.jars" />
            </classpath>
        </java>
		<if>
	        <not><equals arg1="${java-result-1}" arg2="1" /></not>
			<then>
				<fail message="DEBUG_CHECK not activated" />
			</then>
	    </if>

		<!-- Run all tests -->
		<java classname="org.magicwerk.brownies.collections.RunAllTest" jvm="${java.exe}" fork="yes" resultproperty="java-result-2">
        	<jvmarg line="-ea" />
            <classpath>
	            <pathelement location="bin" />
	            <pathelement location="build/bin" />
	            <pathelement location="../Brownies-Core/bin" />
	            <pathelement location="../Brownies-Values/bin" />
	            <pathelement location="../Brownies-Test/bin" />
	            <pathelement location="../MagicTest-NG/build/magictest-ng.jar" />
	            <path refid="lib.jars" />
            </classpath>
        </java>
		<if>
	        <not><equals arg1="${java-result-2}" arg2="0" /></not>
			<then>
				<fail message="Test failed" />
			</then>
	    </if>
	</target>

	<!--
	Test performance of current release.
	-->
	<target name="test-performance-current">
        <java classname="org.magicwerk.brownies.collections.GapListTestPerformance" fork="yes">
            <classpath refid="Brownies-Collections-Test.classpath"/>
        </java>
	</target>

	<!--
	Compare performance of different releases.
	-->
	<target name="test-performance">
		<property name="release2.dir" value="C:/Java/Releases/JAR" />

		<echo message="Testing brownies-collections-0.9.0" />
        <java classname="org.magicwerk.brownies.collections.GapListTestPerformance" fork="yes">
            <classpath>
	            <pathelement location="${release2.dir}/brownies-collections-0.9.0.jar"/>
				<path refid="Brownies-Collections-Test.classpath" />
            </classpath>
        </java>

		<echo message="Testing brownies-collections-0.9.1" />
        <java classname="org.magicwerk.brownies.collections.GapListTestPerformance" fork="yes">
            <classpath>
	            <pathelement location="${release2.dir}/brownies-collections-0.9.1.jar"/>
				<path refid="Brownies-Collections-Test.classpath" />
            </classpath>
        </java>
	</target>

	<!--
	Test snapshot build in directory Brownies-Dev/build/snapshot.
	-->
	<target name="test-snapshot">
		<path id="test.jar">
			<fileset dir="../Brownies-Dev/build/snapshot">
		  		<include name="brownies-collections-*.jar"/>
		  		<exclude name="*-sources.jar"/>
		  		<exclude name="*-javadoc.jar"/>
			</fileset>
		</path>
		<echo message="Testing ${toString:test.jar}"/>
		<path id="test.classpath">
			<path refid="test.jar" />
			<path refid="Brownies-Collections-Test.classpath" />
		</path>
		<antcall target="test" inheritRefs="true">
		</antcall>
	</target>

	<!--
	Test release build in directory Brownies-Dev/build/release.
	-->
	<target name="test-release">
		<path id="test.jar">
			<fileset dir="../Brownies-Dev/build/release">
		  		<include name="brownies-collections-*.jar"/>
		  		<exclude name="*-sources.jar"/>
		  		<exclude name="*-javadoc.jar"/>
			</fileset>
		</path>
		<echo message="Testing ${toString:test.jar}"/>
		<path id="test.classpath">
			<path refid="test.jar" />
			<path refid="Brownies-Collections-Test.classpath" />
		</path>
		<antcall target="test" inheritRefs="true">
		</antcall>
	</target>

	<!--
	Test performance of current release.
	-->
	<target name="test-jdk8">
		<property name="jdk8.dir" value="C:\Java\JDK\jdk1.8.0-b128" />

		<delete dir="build/bin" />
		<mkdir dir="build/bin" />

		<!-- Compile -->
		<javac fork="yes" executable="${jdk8.dir}/bin/javac.exe" srcdir="test-jdk8" destdir="build/bin" includeantruntime="false" >
            <classpath>
	            <pathelement location="../Brownies-Collections/bin" />
	            <pathelement location="../MagicTest-NG/build/magictest-ng.jar" />
				<path refid="Brownies-Core.classpath" />
            </classpath>
		</javac>

		<!-- Run -->
        <java fork="yes" jvm="${jdk8.dir}/bin/java.exe" classname="org.magicwerk.brownies.collections.KeyCollectionsExamples" >
        	<jvmarg line="-ea" />
            <classpath>
	            <pathelement location="build/bin" />
	            <pathelement location="../Brownies-Collections/bin" />
	            <pathelement location="../MagicTest-NG/build/magictest-ng.jar" />
				<path refid="Brownies-Core.classpath" />
            </classpath>
        </java>
	</target>

	<target name="build-test">
		<!--
		<mkdir dir="src" />
		<mkdir dir="build" />
		<delete>
			<fileset dir="${build.dir}" includes="*" />
		</delete>

		<echo message="${toString:buildJars.classpath}" />
		<echo message="${toString:Brownies-Collections-Test.classpath}" />
		<buildJars classpathref="Brownies-Collections-Test.classpath"/>
		-->

		<!--
		<java jar="C:\Java\Libraries\JarJar\JarJar-1.1\jarjar-1.1.jar" fork="true" >
			<arg value="process"/>
			<arg value="jarjar.rules"/>
			<arg value="build/brownies-collections-test-with-all.jar"/>
			<arg value="build/brownies-collections-test-with-all.2.jar"/>
		</java>
		-->
		<!--
		<copy file="${build.dir}/${magictest.jar}.tmp" tofile="${build.dir}/${magictest.jar}" />
		<delete file="${build.dir}/${magictest.jar}.tmp" />
		-->

        <java classname="org.magicwerk.brownies.collections.GapListTestPerformance" classpath="build/brownies-collections-test-with-all.jar" fork="true" />

	</target>

</project>
